//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Manual changes to this file may cause unexpected behavior in your application.
//     Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace STPS.SIRCE.Datos
{
    using System;
    using System.Data.Entity;
    using System.Data.Entity.Infrastructure;
    using STPS.SIRCE.Entidades;
    using System.Data.Entity.Core.Objects;
    using System.Linq;
    
    public partial class SIRCEEntities : DbContext
    {
        public SIRCEEntities()
            : base("name=SIRCEEntities")
        {
        }
    
        protected override void OnModelCreating(DbModelBuilder modelBuilder)
        {
            throw new UnintentionalCodeFirstException();
        }
    
        public virtual DbSet<Acciones> Acciones { get; set; }
        public virtual DbSet<Acuses> Acuses { get; set; }
        public virtual DbSet<AreasTematicas> AreasTematicas { get; set; }
        public virtual DbSet<CentrosTrabajoSIRCE> CentrosTrabajoSIRCE { get; set; }
        public virtual DbSet<ConsecutivosUR> ConsecutivosUR { get; set; }
        public virtual DbSet<Constancias> Constancias { get; set; }
        public virtual DbSet<Cursos> Cursos { get; set; }
        public virtual DbSet<DocumentosProbatorios> DocumentosProbatorios { get; set; }
        public virtual DbSet<EmpresaCentrosTrabajoSIRCE> EmpresaCentrosTrabajoSIRCE { get; set; }
        public virtual DbSet<EmpresasSIRCE> EmpresasSIRCE { get; set; }
        public virtual DbSet<Escolaridades> Escolaridades { get; set; }
        public virtual DbSet<ListaCentrosTrabajo> ListaCentrosTrabajo { get; set; }
        public virtual DbSet<Listas> Listas { get; set; }
        public virtual DbSet<NormasCompetencia> NormasCompetencia { get; set; }
        public virtual DbSet<NormaTrabajador> NormaTrabajador { get; set; }
        public virtual DbSet<ObjetivosCapacitacion> ObjetivosCapacitacion { get; set; }
        public virtual DbSet<Ocupaciones> Ocupaciones { get; set; }
        public virtual DbSet<Trabajadores> Trabajadores { get; set; }
    
        public virtual ObjectResult<spGetConsecutivos_Result> spGetConsecutivos(Nullable<int> empresaSIRCEID, Nullable<int> consecutivoURID)
        {
            var empresaSIRCEIDParameter = empresaSIRCEID.HasValue ?
                new ObjectParameter("EmpresaSIRCEID", empresaSIRCEID) :
                new ObjectParameter("EmpresaSIRCEID", typeof(int));
    
            var consecutivoURIDParameter = consecutivoURID.HasValue ?
                new ObjectParameter("ConsecutivoURID", consecutivoURID) :
                new ObjectParameter("ConsecutivoURID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<spGetConsecutivos_Result>("spGetConsecutivos", empresaSIRCEIDParameter, consecutivoURIDParameter);
        }
    }
}
